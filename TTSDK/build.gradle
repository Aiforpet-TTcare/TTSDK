plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdk 34

    defaultConfig {
        minSdk 21
        targetSdk 34
        versionCode 27
        versionName "1.5.67"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndkVersion '21.3.6528147'  // 예시로 이 버전을 사용한다고 가정합니다.
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a'

        externalNativeBuild {
            cmake {
                cppFlags '-std=c++17'
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/jniLibs'
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    packagingOptions {
        jniLibs {
            pickFirsts += ['**/*.so']
        }
        resources {
            excludes += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/NOTICE',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE.txt',
                    'META-INF/ASL2.0',
                    'META-INF/common_release.kotlin_module',
                    'build.xml'
            ]
        }
    }

    namespace 'com.aiforpet.pet'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    androidResources {
        noCompress 'tflite'
    }
}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                // AAR 파일을 직접 지정
                artifact("$buildDir/outputs/aar/${project.name}-release.aar") {
                    builtBy 'assembleRelease' // 빌드 타스크와 연결
                }

                // SO 파일 경로 명시
                artifact("$buildDir/intermediates/stripped_native_libs/release/out/lib/armeabi-v7a/libyourlibrary.so") {
                    classifier "armeabi-v7a"
                }
                artifact("$buildDir/intermediates/stripped_native_libs/release/out/lib/arm64-v8a/libyourlibrary.so") {
                    classifier "arm64-v8a"
                }
            }
        }

        repositories {
            maven {
                url = uri("https://jitpack.io")
            }
        }
    }
}

dependencies {
    implementation "androidx.gridlayout:gridlayout:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation 'com.airbnb.android:lottie:3.6.1'
    def camerax_version = "1.2.0-alpha04"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation 'com.squareup.picasso:picasso:2.8'
    implementation 'org.tensorflow:tensorflow-lite:2.8.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.8.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.3.1'
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.3.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.3.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta01'
    implementation files('libs/classes.jar')
}