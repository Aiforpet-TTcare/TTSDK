plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdk 35

    defaultConfig {
        minSdk 23
        targetSdk 35
        versionCode 72
        versionName "2.2.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndkVersion '26.1.10909125'
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a'

        externalNativeBuild {
            cmake {
                cppFlags '-std=c++17'
            }
        }


    }

    namespace 'com.aiforpet.pet'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    sourceSets {
        main {
            assets.srcDirs += file("${project(':TTSDK').projectDir}/src/main/assets")
        }
    }


    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    packagingOptions {
        pickFirst 'assets/han.json'
        pickFirst 'assets/images/*'

        jniLibs {
            pickFirsts += ['**/*.so']
        }
        resources {
            excludes += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/NOTICE',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE.txt',
                    'META-INF/ASL2.0',
                    'META-INF/common_release.kotlin_module',
                    'build.xml'
            ]
        }
    }


    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "String", "VERSION_CODE", '"2"'
        }

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "VERSION_CODE", '"2"'
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = 'com.github.Aiforpet-TTcare'
                artifactId = 'TTSDK'
                version = 'v2.2.0.3'

                artifact("$buildDir/outputs/aar/${project.name}-release.aar")


                // 의존성 추가
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each { dep ->
                        if (dep.group) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', dep.group)
                            dependencyNode.appendNode('artifactId', dep.name)
                            dependencyNode.appendNode('version', dep.version)
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation "androidx.gridlayout:gridlayout:1.1.0"
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.airbnb.android:lottie:5.2.0'


    implementation 'com.squareup.picasso:picasso:2.71828'


    // CameraX core library using the camera2 implementation
    def camerax_version = "1.4.2"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX VideoCapture library
    implementation "androidx.camera:camera-video:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation "androidx.camera:camera-mlkit-vision:${camerax_version}"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    implementation 'com.google.ai.edge.litert:litert:1.4.0'
    implementation 'com.google.ai.edge.litert:litert-gpu:1.4.0'
    implementation 'com.google.ai.edge.litert:litert-gpu-api:1.4.0'
    implementation 'com.google.ai.edge.litert:litert-metadata:1.4.0'
    implementation 'com.google.ai.edge.litert:litert-support:1.4.0'





}